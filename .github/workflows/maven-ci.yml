name: Java CI with Maven

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  release:
    types:
      - released

jobs:
  build:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        if: github.event_name == 'release'
        with:
          ref: master
      - uses: actions/checkout@v4
        if: github.event_name != 'release'
      - run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven

      - name: Set Version
        id: set-version
        run: |
          VERSION=$(sed -n 's|.*<revision>\(.*\)</revision>.*|\1|p' pom.xml | cut -d- -f1)
          [ $GITHUB_EVENT_NAME == 'release' ] && VERSION=${{ github.event.release.tag_name }} && VERSION=${VERSION/v/}
          git tag -l | cat
          [ $GITHUB_EVENT_NAME == 'pull_request' ] && VERSION+=-dev.${{ github.event.pull_request.number }}
          [ $GITHUB_EVENT_NAME != 'release' ] && VERSION+=-beta && VERSION+=.$(($(git tag -l "v$VERSION.*" | sort -nt. -k4 -k5 2>/dev/null |  tail -1 | rev | cut -d. -f1 | rev)+1))
          echo version=$VERSION >> $GITHUB_OUTPUT
          echo name=sonar-objectscript-plugin-$VERSION >> $GITHUB_OUTPUT

      - name: Build with Maven
        run: mvn -s $GITHUB_WORKSPACE/.github/workflows/maven-settings.xml -B package -Drevision=${{ steps.set-version.outputs.version }}
        env:
          USER_NAME: ${{ github.actor }}
          ACCESS_TOKEN: ${{ github.token }}

      - name: Publish Test Report
        if: ${{ always() }}
        uses: scacap/action-surefire-report@v1

      - name: Update Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.set-version.outputs.version }}
          prerelease: ${{ github.event_name != 'release' }}
          token: ${{ secrets.GITHUB_TOKEN }} 
          files: |
            target/${{ steps.set-version.outputs.name }}.jar
           
      # - name: Upload to Nexus plugin
      #   run: |
      #     mvn deploy:deploy-file \
      #       -DgroupId=org.sonarsource.objectscript \
      #       -DartifactId=sonar-objectscript-plugin \
      #       -Dversion=${{ steps.set-version.outputs.version }} \
      #       -Dpackaging=jar \
      #       -Dfile=sonar-objectscript-plugin/target/sonar-objectscript-plugin-${{ steps.set-version.outputs.version }}.jar \
      #       -DrepositoryId=nexus \
      #       -Durl=${{ secrets.NEXUS_URL }} \
      #       -s $GITHUB_WORKSPACE/.github/workflows/maven-settings.xml
      #   env:
      #     NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
      #     NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}

      # - name: Upload to Nexus testing
      #   run: |
      #     mvn deploy:deploy-file \
      #       -DgroupId=org.sonarsource.objectscript \
      #       -DartifactId=objectscript-testing \
      #       -Dversion=${{ steps.set-version.outputs.version }} \
      #       -Dpackaging=jar \
      #       -Dfile=objectscript-testing/target/objectscript-testing-${{ steps.set-version.outputs.version }}.jar \
      #       -DrepositoryId=nexus \
      #       -Durl=${{ secrets.NEXUS_URL }} \
      #       -s $GITHUB_WORKSPACE/.github/workflows/maven-settings.xml
      #   env:
      #     NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
      #     NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}    

      # - name: Upload to Nexus checks
      #   run: |
      #     mvn deploy:deploy-file \
      #       -DgroupId=org.sonarsource.objectscript \
      #       -DartifactId=objectscript-checks \
      #       -Dversion=${{ steps.set-version.outputs.version }} \
      #       -Dpackaging=jar \
      #       -Dfile=objectscript-checks/target/objectscript-checks-${{ steps.set-version.outputs.version }}.jar \
      #       -DrepositoryId=nexus \
      #       -Durl=${{ secrets.NEXUS_URL }} \
      #       -s $GITHUB_WORKSPACE/.github/workflows/maven-settings.xml
      #   env:
      #     NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
      #     NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}  
      # - name: Upload to Nexus frontend
      #   run: |
      #     mvn deploy:deploy-file \
      #       -DgroupId=org.sonarsource.objectscript \
      #       -DartifactId=objectscript-frontend \
      #       -Dversion=${{ steps.set-version.outputs.version }} \
      #       -Dpackaging=jar \
      #       -Dfile=objectscript-frontend/target/objectscript-frontend-${{ steps.set-version.outputs.version }}.jar \
      #       -DrepositoryId=nexus \
      #       -Durl=${{ secrets.NEXUS_URL }} \
      #       -s $GITHUB_WORKSPACE/.github/workflows/maven-settings.xml
      #   env:
      #     NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
      #     NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}

      - name: Bump release version
        if: github.event_name == 'release'
        run: |
          VERSION=${{ github.event.release.tag_name }} && VERSION=${VERSION/v/}
          NEXT_VERSION=`echo $VERSION | awk -F. '/[0-9]+\./{$NF++;print}' OFS=.`
          sed -i "s|.*<revision>\(.*\)</revision>.*|<revision>$NEXT_VERSION-SNAPSHOT</revision>|" pom.xml
          git config --global user.name 'ProjectBot'
          git config --global user.email 'bot@users.noreply.github.com'
          git add pom.xml
          git commit -m 'auto bump version with release'
          git push